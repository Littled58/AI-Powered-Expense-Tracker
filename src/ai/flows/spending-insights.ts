// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered spending insights flow.
 *
 * This file defines a Genkit flow that analyzes user spending habits and
 * provides personalized insights and tips to optimize savings.
 *
 * - getSpendingInsights - The main function to retrieve spending insights.
 * - SpendingInsightsInput - The input type for the getSpendingInsights function.
 * - SpendingInsightsOutput - The output type for the getSpendingInsights function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const SpendingInsightsInputSchema = z.object({
  income: z.number().describe('The user\u0027s monthly income.'),
  expenses: z.array(
    z.object({
      category: z.string().describe('The category of the expense (e.g., food, transportation).'),
      amount: z.number().describe('The amount spent in that category.'),
    })
  ).describe('A list of expenses with their categories and amounts.'),
  budgetGoals: z.array(
    z.object({
      category: z.string().describe('The category of the budget goal (e.g., food, transportation).'),
      amount: z.number().describe('The target budget amount for that category.'),
    })
  ).describe('A list of budget goals for each category.'),
});
export type SpendingInsightsInput = z.infer<typeof SpendingInsightsInputSchema>;

const SpendingInsightsOutputSchema = z.object({
  insights: z.array(
    z.string().describe('A list of personalized insights and tips based on spending habits.')
  ).describe('AI generated financial insights and recommendations'),
});
export type SpendingInsightsOutput = z.infer<typeof SpendingInsightsOutputSchema>;

export async function getSpendingInsights(input: SpendingInsightsInput): Promise<SpendingInsightsOutput> {
  return spendingInsightsFlow(input);
}

const spendingInsightsPrompt = ai.definePrompt({
  name: 'spendingInsightsPrompt',
  input: {
    schema: z.object({
      income: z.number().describe('The user\u0027s monthly income.'),
      expenses: z.array(
        z.object({
          category: z.string().describe('The category of the expense (e.g., food, transportation).'),
          amount: z.number().describe('The amount spent in that category.'),
        })
      ).describe('A list of expenses with their categories and amounts.'),
      budgetGoals: z.array(
        z.object({
          category: z.string().describe('The category of the budget goal (e.g., food, transportation).'),
          amount: z.number().describe('The target budget amount for that category.'),
        })
      ).describe('A list of budget goals for each category.'),
    }),
  },
  output: {
    schema: z.object({
      insights: z.array(
        z.string().describe('A list of personalized insights and tips based on spending habits.')
      ).describe('AI generated financial insights and recommendations'),
    }),
  },
  prompt: `You are a personal finance advisor. Analyze the user's spending habits and provide personalized insights and tips to optimize their savings.

Here is the user's financial information:

Income: {{{income}}}
Expenses:
{{#each expenses}}
  - Category: {{{category}}}, Amount: {{{amount}}}
{{/each}}
Budget Goals:
{{#each budgetGoals}}
  - Category: {{{category}}}, Amount: {{{amount}}}
{{/each}}

Provide a list of insights and tips to help the user save money and achieve their budget goals. Be specific and actionable.

Your output should be an array of strings.
`,
});

const spendingInsightsFlow = ai.defineFlow<
  typeof SpendingInsightsInputSchema,
  typeof SpendingInsightsOutputSchema
>(
  {
    name: 'spendingInsightsFlow',
    inputSchema: SpendingInsightsInputSchema,
    outputSchema: SpendingInsightsOutputSchema,
  },
  async input => {
    const {output} = await spendingInsightsPrompt(input);
    return output!;
  }
);
